class Decoration : SwitchableDecoration
{
	int user_uses;
	int user_width;
	int user_height;
	int user_health;
	int user_disintegrationcolor;
	int user_notsolid;
	double user_scaleX;
	double user_scaleY;
	int user_destroyed;
	int user_fadeincount;
	int destructiontype;
	string user_caption;

	Default
	{
		+NOGRAVITY
		-SOLID
		+SHOOTABLE
		+NOBLOOD
		+INVULNERABLE
		+NODAMAGE
		+DONTTHRUST
		+NOTAUTOAIMED
		Height 16;
		Radius 1;
		Health 99999;
		Mass 999999;
		Species "Decoration";
		DeathSound "effects/explosion/debris";
	}
	States
	{
		Spawn:
			TOS1 A 1;
		Initialize:
			#### # 0 {
//				ACS_NamedExecuteAlways("SetRadarTID",0);
				ACS_NamedExecuteAlways("A_SetupThing",0);
				user_uses = args[0] || args[2];

				user_scaleX = Scale.X;
				user_scaleY = Scale.Y;
				if (user_health) { health = user_health; }

				if (Health >= 300 / Scale.x) { destructiontype = 2; }
				else if (Health >= 100 / Scale.x) { destructiontype = 1; }

				return ResolveState("Initial");
			}
		Pain.Stun:
		Active:
			#### # 0 { return ResolveState("Inactive"); }
		Inactive:
		Initial:
			#### # 5 {
				if (vel.x != 0 || vel.y != 0 || vel.z != 0) {
					return ResolveState("Moved");
				} else {
					return ResolveState(null);
				}
			}
			Loop;
		Pain:
			#### # 5 {
				A_Quake(int(Radius) / 16, int(Radius) / 3, int(Radius), int(Radius) * 3);
				A_Explode(int(Radius) / 16, int(Radius) / 2, 0, 1);
				A_SetScale(Radius / 32.0);
				if (!user_destroyed && destructiontype == 2) {
					A_SpawnItemEx("FireSpawner", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSCALE);
					user_destroyed = 1;
				} else if (destructiontype == 1) {
					A_SpawnItemEx("FlareUp", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSCALE);
				}
				A_SpawnItemEx("SmokePuff", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSCALE);
				A_SetScale(user_scalex, user_scaley);
			}
			Goto Initial;
		Moved:
			#### # 5 A_Gravity;
			Goto Initial;
		Death:
			#### # 0 {
				user_disintegrationcolor = 16711590;
				A_KillChildren();
			}
			#### # 0 A_Jump(256, "DeathResume");
		Death.Phaser:
			#### # 0 {
				user_disintegrationcolor = 10803452;
				A_KillChildren("Phaser");
			}
			#### # 0 A_Jump(256, "DeathResume");
		Death.PhaserRifle:
			#### # 0 {
				user_disintegrationcolor = 16557295;
				A_KillChildren("PhaserRifle");
			}
			#### # 0 A_Jump(256, "DeathResume");
		Death.Disruptor:
			#### # 0 {
				user_disintegrationcolor = 2620994;
				A_KillChildren("Disruptor");
			}
			#### # 0 A_Jump(256, "DeathResume");
		DeathResume:
			#### # 45 {
				if (Radius >= 16) {
					A_Scream();
				}
				A_RemoveChildren(TRUE, RMVF_MISC, "None", "Block");
				ACS_NamedExecuteAlways("A_Disintegrate", 0, user_disintegrationcolor, 1);
				bNoGravity = False;
				A_SetPitch(pitch + FRandom(-30.0, 30.0), SPF_INTERPOLATE);
				A_SetRoll(roll + FRandom(-30.0, 30.0), SPF_INTERPOLATE);
			}
			Stop;
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();

		if (user_notsolid) { bSolid = False; }

		if (GetCVar("st_bounding") && bSolid) {
			Scale.X = Radius * 2;
			Scale.Y = Height * 2;
			A_SpawnItemEx("Block1x1Bounding", 0, 0, Height / 2, 0, 0, 0, 0, SXF_TRANSFERSCALE | SXF_SETMASTER);
			Scale.X = user_scaleX;
			Scale.Y = user_scaleY;
		}

		if (bNoGravity) {
			bDontThrust = TRUE;
			bPushable = FALSE;
		}

		A_SetSize(Radius * Scale.X, Height * Scale.Y);
	}
}

class DestroyableDecoration : Decoration
{
	//$Sprite TOS1A0
	Default
	{
		-INVULNERABLE
		-NODAMAGE
		-DONTTHRUST 
		Health 10;
		Mass 50;
	}
}

class UsableDecoration : Decoration { Default { -NOTAUTOAIMED +USESPECIAL +SOLID } }