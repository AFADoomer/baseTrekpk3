/*
  "Block" actors spawned to emulate collision detection for 3D models
*/

class Block1x1 : SwitchableDecoration
{
	Vector3 spawnoffset;
	Vector3 offset;
	int pushtime;
	double oldpitch;
	double oldroll;

	Default
	{
		+NOGRAVITY
		+SOLID
		+SHOOTABLE
		+NOBLOOD
		+NODAMAGE
		+NOTAUTOAIMED
		+ALLOWPAIN
		+ACTLIKEBRIDGE
//		+SPECIAL
		Painchance 255;
		Radius 1;
		Height 1;
		Species "Block";
	}
	States
	{
		Spawn:
			TOS1 A -1 BRIGHT;
			Stop;
		Pain:
			TOS1 A 0 A_DamageMaster(1);
			Goto Spawn;
		Pain.Stun:
			TOS1 A 0;
			Goto Spawn;
		Pain.Phaser:
			TOS1 A 0 A_DamageMaster(1, "Phaser");
			Goto Spawn;
		Pain.PhaserRifle:
			TOS1 A 0 A_DamageMaster(3, "PhaserRifle");
			Goto Spawn;
		Pain.Disruptor:
			TOS1 A 0 A_DamageMaster(5, "Disruptor");
			Goto Spawn;
		Death:
			TOS1 A 0 A_RemoveChildren(TRUE, RMVF_MISC, "None", "Block");
			Stop;
	}

	override void PostBeginPlay()
	{
		if (scale.x == 1.0 && scale.y == 1.0)
		{
			scale.x = Radius * 2; 
			scale.y = Height * 1.2;
		}

		if (master)
		{
			spawnoffset = pos - master.pos;

			Vector2 temp = RotateVector((spawnoffset.x, spawnoffset.y), -master.angle);
			spawnoffset = (temp.x, temp.y, spawnoffset.z);

			offset = spawnoffset;

			scale.x *= master.scale.x;
			scale.y *= master.scale.y;

			SetTag(master.GetTag());
		}
	}

	override void Tick()
	{
		Super.Tick();

		// Kills performance when uncommented!
//		if (GetCVar("st_bounding") > 0) { bInvisible = false; }
//		else { bInvisible = true; }

		if (pitch != oldpitch || roll != oldroll) { Rotate(); }
	}

	void Rotate()
	{
		Vector2 temp;

		// Keep the blocks in the correct position, regardless of pitch/roll of the master actor
		// Obviously not perfect, because the blocks are rectangular, but close enough when you can't see them.
		if (master && spawnoffset != (0, 0, 0)) {
			temp = RotateVector((spawnoffset.y, spawnoffset.z), master.roll);
			offset = (spawnoffset.x, temp.x, temp.y);

			temp = RotateVector((offset.x, offset.z), 360 - master.pitch);
			offset = (temp.x, offset.y, temp.y);

			temp = RotateVector((offset.x, offset.y), master.angle);
			offset = (temp.x, temp.y, offset.z);

			offset.x *= master.scale.x;
			offset.y *= master.scale.x;
			offset.z *= master.scale.y;

			SetOrigin(master.pos + offset, true);

			pushtime++;
		}
		oldpitch = pitch;
		oldroll = roll;
	}

	override void Touch(Actor toucher)
	{
		if (master && master.bPushable && toucher is "PlayerPawn")
		{
			master.lastpush = pushtime;
			master.vel = toucher.vel * master.pushfactor;
			Rotate();
		}
	}
}

class Block1x1Bounding : Block1x1 { Default { -SOLID } }

class Block : Block1x1 { Default { Radius 2; Height 8; +INVISIBLE } }
class Block2x2 : Block { Default { Radius 2; Height 2; } }
class Block2x16 : Block { Default { Radius 2; Height 16; } }
class Block4 : Block { Default { Radius 4; Height 8; } }
class Block8 : Block { Default { Radius 8; Height 8; } }
class Block8x1 : Block { Default { Radius 8; Height 1; } }
class Block12 : Block { Default { Radius 12; Height 12; } }
class Block16 : Block { Default { Radius 16; Height 16; } }
class Block24 : Block { Default { Radius 24; Height 24; } }
class Block25 : Block { Default { Radius 25;  Height 25; } }
class Block32 : Block { Default { Radius 32; Height 32; } }
class Block48 : Block { Default { Radius 48; Height 48; } }
class Block64 : Block { Default { Radius 64; Height 64; } }
class Block64x8 : Block { Default { Radius 64; Height 8; } }
class Block28x16 : Block { Default { Radius 28; Height 16; } }
class Block12x54 : Block { Default { Radius 12; Height 54; -NOGRAVITY } }
class Block10x32 : Block { Default { Radius 10; Height 32; -NOGRAVITY } }
class Block16x56 : Block { Default { Radius 16; Height 56; -NOGRAVITY } }
class Block18x1 : Block { Default { Radius 18; Height 1; } }
class Block20x128 : Block { Default { Radius 20; Height 128; -NOGRAVITY } }
class Block22x1 : Block { Default { Radius 22; Height 1; } }
class Block27x1 : Block { Default { Radius 27; Height 1; } }
class Block24x32 : Block { Default { Radius 24; Height 32; } }

class ShuttleBlock1 : Block { Default { -ACTLIKEBRIDGE Radius 50; Height 75; } }
class ShuttleBlock2 : ShuttleBlock1 { Default { Radius 50; Height 65; } }
class ShuttleBlock3 : ShuttleBlock1 { Default { Radius 50; Height 55; } }
class ShuttleBlock4 : ShuttleBlock1 { Default { Radius 50; Height 45; } }
class ShuttleBlock5 : ShuttleBlock1 { Default { Radius 50; Height 35; } }
class ShuttleBlock6 : ShuttleBlock1 { Default { Radius 50; Height 25; } }
class ShuttleBlock7 : ShuttleBlock1 { Default { Radius 70; Height 42; } }
class ShuttleBlock8 : ShuttleBlock1 { Default { Radius 16; Height 24; } }

class GangwayStep : Block8x1 {}