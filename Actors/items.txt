Actor HideHUD : Inventory {}
Actor ElevatorPanel : Inventory {}

Actor OrbitCenter
{
	+NOGRAVITY
	States
	{
		Spawn:
			TNT1 A -1
			Stop
	}
}

Actor Transport : CustomInventory Replaces TeleportFog
{
	+NOBLOCKMAP
	+NOTELEPORT
	+NOGRAVITY
	States
//	+AUTOACTIVATE
	{
		Spawn:
			TNT1 A 1
			TNT1 A 1
		Static:
			TNT1 A 70
			Stop
//		Pickup:
			//TNT1 A 0 ACS_NamedExecuteAlways("A_Transport", 0, 1, 1)
//			Stop
	}

}

Actor TransportK : CustomInventory
{
//	+AUTOACTIVATE
	States
	{
		Spawn:
			TNT1 A -1
			Loop
//		Pickup:
//			TNT1 A 0 ACS_NamedExecuteAlways("A_TransportK", 0)
//			Stop
	}
}

Actor TransportOut : Transport
{
	States
	{
//		Pickup:
//			TNT1 A 0 ACS_NamedExecuteAlways("A_Transport", 0, 1, 0)
//			Stop
	}
}

Actor Disintegration : CustomInventory
{
	+AUTOACTIVATE
	States
	{
		Spawn:
			TNT1 A -1
			Loop
		Pickup:
			TNT1 A 0 ACS_NamedExecuteAlways("A_Disintegrate", 0, 2620994)
			Stop
	}
}

Actor Stunner : CustomInventory
{
	+AUTOACTIVATE
	States
	{
		Spawn:
			TNT1 A -1
			Loop
		Pickup:
			TNT1 A 0 ACS_NamedExecuteAlways("A_Stun", 0, 300) //300s = 5m
			Stop
	}
}

Actor NavGoal 26000
{
	Height 64
	+NOGRAVITY
	+NOBLOCKMAP
	+SHOOTABLE
	+INVISIBLE
	+ISMONSTER //So I can set Master pointer
	States
	{
		Spawn:
			UNKN A 0 NoDelay ACS_NamedExecuteAlways("SetRadarTID",0)
		Static:
			UNKN A 35
			Loop
	}
}

Actor TurboLiftMarker : NavGoal {}
Actor TransporterMarker : NavGoal {}

Actor ChaseCam
{
	Height 1
	Radius 8
	+NOGRAVITY
	+NOBLOCKMAP
	+ISMONSTER //Because SetActorProperty/APROP_MasterTID's DoSetMaster function requires it for some reason...
	States
	{
		Spawn:
			TNT1 A 1
			TNT1 A 0 A_Warp(AAPTR_Master, 0, 0, 128.0, 0, WARPF_NOCHECKPOSITION | WARPF_COPYINTERPOLATION)
			Loop
	}
}

Actor LeanCam
{
	var int user_ZHeight;

	Height 1
	Radius 1
	+NOGRAVITY
	+FLOAT
	+NOBLOCKMAP
	+ISMONSTER
	States
	{
		Spawn:
			TNT1 A 1
			TNT1 A 1 A_SetUserVar("user_ZHeight", 55)
			TNT1 A 0 A_Warp(AAPTR_Master, 0, 0, user_ZHeight * 1.0, 0, WARPF_INTERPOLATE | WARPF_NOCHECKPOSITION | WARPF_COPYINTERPOLATION)
			Loop
		Left:
			TNT1 A 1 A_Warp(AAPTR_Master, 8.0, -7.0, user_ZHeight * 1.0, 0, WARPF_INTERPOLATE | WARPF_COPYINTERPOLATION)
			Loop
		Right:
			TNT1 A 1 A_Warp(AAPTR_Master, 8.0, 7.0, user_ZHeight * 1.0, 0, WARPF_INTERPOLATE | WARPF_COPYINTERPOLATION)
			Loop
	}
}

Actor DisruptorStation : Decoration
{
	//$Sprite TOS1A0
	var int user_level;
//	var int user_uses;
	var int user_used;
	var int user_given;

	Height 8
	Radius 8
	Mass 999999
	+SOLID
	+SHOOTABLE
	+INVULNERABLE
	+USESPECIAL
	+NOGRAVITY
	Activation THINGSPEC_Switch | THINGSPEC_ThingTargets | THINGSPEC_ThingActs

	Tag "Disruptor Charging Station"

	States
	{
		Spawn:
			TOS1 D 1 NoDelay {
				ACS_NamedExecuteAlways("SetRadarTID",0);
				user_level = 100;
				if (user_uses == 0) { user_uses = args[0]; }
				if (user_uses == 0) { user_uses = 300; }
				if (user_uses < 0) { return State("Done"); }
				user_width = 18;
				user_height = 32;

				A_SpawnItemEx ("Block8", 6.0, -8.0, 0.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 6.0, 8.0, 0.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 6.0, -8.0, 8.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 6.0, 8.0, 8.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 6.0, -8.0, 16.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 6.0, 8.0, 16.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 6.0, -8.0, 24.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 6.0, 8.0, 24.0, 0, 0, 0, 0, SXF_SETMASTER);

				return State("Static");
			}
		Static:
			TOS1 # 0 A_JumpIf(user_given > 0, "Static.Used")
			TOS1 # 1 
			Goto Static.Resume
		Static.Used:
			TOS2 # 1
			Goto Static.Resume
		Static.Resume:
			"####" # 20
			"####" # 0 A_JumpIf(user_level >= 100, "Full")
		Quarter:
			"####" A 0 A_JumpIf(user_level <= 25, "Charge")
		Half:
			"####" B 0 A_JumpIf(user_level <= 50, "Charge")
		ThreeQuarter:
			"####" C 0 A_JumpIf(user_level <= 75, "Charge")
		Full:
			"####" D 0 A_SetUserVar("user_level", 100)
			Goto Static
		Charge:
			"####" # 0 A_SetUserVar("user_level", user_level + 1)
			Goto Static
		Inactive:
		Active:
			"####" # 0 {
				if (user_uses <= 0) { return State("Done"); }
				user_used = CallACS("A_AmmoStation", 0, user_level);
				if (user_used != 0) { return State("Return"); }
				return State("Return.Empty");
			}
		Return:
			TOS1 # 35 {
				user_uses = user_uses - user_used;
				user_level = user_level - user_used;
				if (user_used < 0) { return State("DispensedWeapon"); }
				if (user_uses <= 0) { return State("Done"); }
				if (user_uses > 0) { A_PlaySound("actor/powerup", CHAN_AUTO, 1.0); }
				return State("");
			}
		Return.Empty:
			TOS2 # 20 {
				return State("Static");
			}
		Done:
			TOS2 E -1 { if (user_used > 0) { A_PlaySound("actor/burnout", CHAN_AUTO, 1.0); } }
			Stop
		DispensedWeapon:
			"####" # 0 {
				user_given = 1;
				user_used = 100;
			}
			TOS2 A 0 A_Jump(256, "Return")
	}
}

Actor PhaserRifleStation : DisruptorStation
{
	Height 8
	Radius 8

	Tag "Phaser Rifle Charging Station"

	States
	{
		Spawn:
			TOS1 D 1 NoDelay {
				ACS_NamedExecuteAlways("SetRadarTID",0);
				user_level = 100;
				if (user_uses == 0) { user_uses = args[0]; }
				if (user_uses == 0) { user_uses = 400; }
				if (user_uses < 0) { return State("Done"); }
				user_width = 8;
				user_height = 32;

				A_SpawnItemEx ("Block8", 0.0, 0.0, 8.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 0.0, 0.0, 16.0, 0, 0, 0, 0, SXF_SETMASTER);
				A_SpawnItemEx ("Block8", 0.0, 0.0, 24.0, 0, 0, 0, 0, SXF_SETMASTER);

				return State("Static");
			}
		Inactive:
		Active:
			"####" # 0 {
				if (user_uses <= 0) { return State("Done"); }
				user_used = CallACS("A_AmmoStation", 1, user_level);
				if (user_used != 0) {
					A_PlaySound("computer/button2");
					return State("Return");
				}
				return State("Return.Empty");
			}
	}
}

ACTOR Nav_Block
{
	Radius 8
	Height 0
	States
	{
	Spawn:
		TNT1 A -1
		Loop
	}
}

ACTOR Nav_Check
{
	Radius 0
	Height 64
	States
	{
	Spawn:
		TNT1 A -1
		Loop
	}
}

Actor AccessLevel1 : Key //Default key to allow broader ship access
{}

Actor AccessLevel2 : Key
{
	Radius 20
	Height 16
	+NOTDMATCH

	States
	{
		Spawn:
			RKEY A 10
			RKEY B 10 Bright
			Loop
	}
}

Actor AccessLevel3 : Key
{
	Radius 20
	Height 16
	+NOTDMATCH

	States
	{
		Spawn:
			BKEY A 10
			BKEY B 10 Bright
			Loop
	}
}

Actor AccessLevel4 : Key
{
	Radius 20
	Height 16
	+NOTDMATCH

	States
	{
		Spawn:
			YKEY A 10
			YKEY B 10 Bright
			Loop
	}
}