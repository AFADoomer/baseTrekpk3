/*
class Fountain : Decoration
{
	Default
	{
		RenderStyle 'STYLE_Translucent';
		Alpha 0.4;
	}
	States
	{
		Initial:
			FNTN ABCD 2 A_SetScale(0.6, 0.75);
			Loop;
	}
}


*/

class Droplet : actor
{
	double fadeamt;
	int rollamt;

	Default
	{
		PROJECTILE;
		+NOBLOCKMAP;
		+NOTELEPORT;
		-NOGRAVITY;
		+FORCEXYBILLBOARD;
		+CANBOUNCEWATER;
		Height 2;
		Radius 1;
		Speed 5;
		Mass 1;
		Scale 0.025;
		Gravity 0.25;
		RenderStyle "Stencil";
		Alpha 0.2;
		StencilColor "White";
		BounceType "Hexen";
		BounceFactor 0.2;
	}

	States
	{
		Spawn:
			SPLA S 0 NoDelay {
				SetShade(RandomPick(color(27, 243, 255), color(1, 184, 228), color(3, 161, 206), color(3, 139, 201), color(22, 247, 249), color(220, 247, 249)));
				if (master) {
					gravity = gravity / master.Scale.Y;
				}

				fadeamt = 0.02 * gravity;
			}
		Initial:
			"####" # 0 {
				Scale.X = Scale.X * (FRandom(0.1, 0.4));
				Scale.Y = Scale.Y * (FRandom(0.7, 1.3));
			}
		Draw:
			"####" # 1 {
				A_FadeOut(fadeamt, false);
				if (alpha <= 0) { return ResolveState("Death"); }
				return ResolveState(null);
			}
			Loop;
		Death:
			TNT1 A 35 {
//				A_PlaySound("world/waterdrop", CHAN_AUTO, FRandom(0.1, 0.2));
				A_SpawnProjectile("SplashSteam", 0, 0, angle, CMF_AIMDIRECTION, Random(0, 30));
			}
			Stop;
	}
}

class SplashSteam : Actor
{
	int rolldir;

	Default
	{
		PROJECTILE;
		+FORCEXYBILLBOARD;
		+WINDTHRUST;
		+ROLLSPRITE;
		+CANBOUNCEWATER;
		+NOWALLBOUNCESND;
		Height 1;
		Radius 1;
		Speed 0.25;
		BounceType "Hexen";
		BounceFactor 0;
		Scale 0.015;
		Alpha 0.4;
	}
	States
	{
		Spawn:
			STEM A 0 NoDelay {
				roll = Random(1, 360);
				rolldir = Random(-5, 5);
			}
		Death:
			STEM A 1 {
				roll += rolldir;
				Scale.X *= 1.05;
				Scale.Y *= 1.05;
				A_FadeOut(0.0075);
			}
			Loop;
	}
}

class DropletShadow : actor
{
	int user_scale;

	Default
	{
		+NOGRAVITY;
		+NOBLOCKMAP;
		RenderStyle "Stencil";
		Alpha 0.4;
	}

	States
	{
		Spawn:
			TOS1 A 0 {
				user_scale += 1;
				A_SetScale(1.0 - user_scale * 0.1);

				if (master) { SetShade(master.fillcolor); alpha = master.alpha; }
			}
		SpawnLoop:
			FLAR E 1 Bright A_FadeOut(0.25);
			Loop;
	}
}


class Fountain : SwitchableDecoration 
{
	int spread;
	int dropletcount;
	double targetscale;
	

	Default
	{
		+NOBLOCKMAP;
		+NOGRAVITY;
		+NOINTERACTION;
		+CLIENTSIDEONLY;
		Height 2;
		Radius 1;
		RenderStyle 'STYLE_Translucent';
		Alpha 0.125;
	}

	void A_DoDropletInterval()
	{
		int Interval;

		Activate(self);

		if (args[2] > 0)
		{
			spread = args[2];
		}
		else
		{
			spread = 8;
		}

		Scale.X = spread / 6.4;

		if(args[0] > 0 || args[1] > 0)
		{
			Interval = Random[Droplets](args[0], args[1]);
		}
		else
		{
			Interval = 1;
		}

		A_SetTics(Interval);
	}

	override void Tick(void)
	{
		if (!targetscale) { targetscale = FRandom(0.95, 1.05); }

		if (Scale.Y < targetscale - 0.001) { Scale.Y += 0.001; }
		else if (Scale.Y > targetscale + 0.001) { Scale.Y -= 0.001; }
		else { targetscale = 0; }

		Super.Tick();
	}

	States
	{
		Spawn:
			TOS1 A 5;
		SpawnLoop:
			TOS1 A 1 A_DoDropletInterval();
			Loop;
		Active:
			TOS1 A 0 {
				A_PlaySound("world/rain", CHAN_6, FRandom(0.1, 0.2), True);
			}
			Goto SpawnDroplets;
		SpawnDroplets:
			TOS1 A 1 {
				A_SetTics(Random(0, 1));
			}
			TOS1 A 0 {
				if (dropletcount < 75)
				{
					int waterangle;

					if (pitch % 180 == 0) {
						waterangle = Random(0, 360);
					} else {
						waterangle = Random(-spread, spread);
					}

					let mo = A_SpawnProjectile("Droplet", 0, 0, waterangle, CMF_AIMDIRECTION, 270 - pitch + RandomPick(-1, 1) * FRandom(spread * 7 / 8, spread));
					mo.master = self;

					dropletcount++;
					return ResolveState("SpawnDroplets");
				}

				dropletcount = 0;
				return ResolveState("SpawnLoop");
			}
		Inactive:
			TOS1 A -1 A_StopSound(CHAN_6);
			Loop;
	}
}